<?php

/**
 * @file
 * earn_it_form_tweaks.module - Earn It Form Tweaks code.
 *
 * @author
 * Shawn FitzPatrick sdfitzpa@asu.edu
 *
 * Provides form tweaks for the add activity form
 *
 */

/*********************************************************************
  CONFIG
*********************************************************************/


/*********************************************************************
  DRUPAL HOOKS
*********************************************************************/

/**
 * Implements hook_form_alter().
 *
 */
function earn_it_form_tweaks_form_alter(&$form, &$form_state, $form_id) {

  switch($form_id) {

    case 'game_node_form':
    
      global $user;
      $account = $user;
      
      $cpath = current_path();
      drupal_set_message($cpath);
      if ($cpath == "node/add/game") {
      
        $testUser = user_load(2);
        dpm($testUser);
    
        $randomSerial = rand(1000, 10000);
        // TODO: check its not a duplicate
      
        $form['title']['#default_value'] = "game" . $randomSerial;

        $form['field_serial_number']['und'][0]['value']['#default_value'] = $randomSerial;
        //$form['field_serial_number']['#disabled'] = true;
        $form['field_facilitator']['und']['#default_value'] = $account->uid;
        $form['field_facilitator']['#disabled'] = true;
        $form['field_current_game_state']['#disabled'] = true;
      }
     
      break;

    }
}

function earn_it_form_tweaks_node_insert($node) {
  if ($node->type == "game") {
    add_game_to_facilitator($node);
    add_users_to_game($node);
  }
}

/*function earn_it_form_tweaks_init() {
  //drupal_add_js('jQuery(document).ready(function () { alert("Init"); });', 'inline');
  $cpath = current_path();
  if ($cpath == "node/59") { // student page
    global $user;
    drupal_set_message("on page student");
    drupal_add_js(array('earnituid' => array('key' => $user->uid)), 'setting');
    drupal_add_js(drupal_get_path('module', 'earn_it_form_tweaks') . '/js/continue.js'); 
  }
  else if ($cpath == "node/58") { // facilitator page
    global $user;
    $user = user_load($user->uid);

    $result = db_query('SELECT f.field_playing_game_target_id FROM field_data_field_playing_game f WHERE f.entity_id = :cuid', array(':cuid' => $user->uid));

    foreach ($result as $record) {
      $gnid = $record -> field_playing_game_target_id;
    }
    $cgame = node_load($gnid);
    
    drupal_add_js(array('gamenid' => array('key' => $gnid)), 'setting');

    $cstate = $cgame->field_current_game_state['und'][0]['tid'];
    if ($cstate == 1) { // init
      drupal_add_js(drupal_get_path('module', 'earn_it_form_tweaks') . '/js/continue-init.js');
    }
    else if ($cstate == 2) {
      drupal_add_js(drupal_get_path('module', 'earn_it_form_tweaks') . '/js/continue-week1.js');
    }
    //drupal_add_js(array('gamestate' => array('key' => $cgame->field_current_game_state['und'][0]['tid'])), 'setting');

    //drupal_add_js(drupal_get_path('module', 'earn_it_form_tweaks') . '/js/continue-facil.js');
  }
}*/

function earn_it_form_tweaks_menu() {
  $items = array();

  $items['user_progress/%'] = array(
    'title' => 'Update student progress', 
    'description' => 'Callback for updating student progress.', 
    'page callback' => 'update_student_progress_php_function', 
    'page arguments' => array(1, 2),
    'access arguments' => array('access content'), 
    'type' => MENU_CALLBACK,
  );
  
  $items['facil_progress/%'] = array(
    'title' => 'Update facilitator progress', 
    'description' => 'Callback for updating facilitator progress.', 
    'page callback' => 'update_facil_progress_php_function', 
    'page arguments' => array(1, 2),
    'access arguments' => array('access content'), 
    'type' => MENU_CALLBACK,
  );
  
  $items['create_response/%'] = array(
    'title' => 'Create a response to an activity', 
    'description' => 'Callback for creating a response node.', 
    'page callback' => 'create_response_php_function', 
    'page arguments' => array(1, 2, 3),
    'access arguments' => array('access content'), 
    'type' => MENU_CALLBACK,
  );

  return $items;
}


/*********************************************************************
  API
*********************************************************************/

function add_game_to_facilitator($node) {
  global $user;
  $existing = user_load($user->uid);
  $edit = (array) $existing;
  $edit['field_playing_game']['und'][0]['target_id'] = $node->nid;
  user_save($existing, $edit);
}

function add_users_to_game($node) {
  
  $gnid = $node->nid;
  $gameNum = $node->field_serial_number['und'][0]['value'];
  
  $numPlayers = $node->field_number_of_players['und'][0]['value'];
  $currColor = 16;

  for ($i=0; $i<$numPlayers; $i++) { // loops from 1 to the last player
    $colorName = taxonomy_term_load($currColor) -> name;
    $edit = array(
      'name' => $gameNum . $colorName,
      'pass' => $gameNum . $colorName,
      'status' => 1,
      'field_student_state' => array(
        'und' => array(
          0 => array(
            "tid" => 1))),
      'field_playing_game' => array(
        'und' => array(
          0 => array(
            "target_id" => $gnid))),
      'field_team_color' => array(
        'und' => array(
          0 => array(
            "tid" => $currColor))),
      'field_gpa' => array(
        'und' => array(
          0 => array(
            "value" => 0))),
      'field_act_score' => array(
        'und' => array(
          0 => array(
            "value" => 0))),
      'field_scholarship_money' => array(
        'und' => array(
          0 => array(
            "value" => 0))),
    );
    user_save(null, $edit);
    $currColor++;
  
  }
}

function check_all_students_and_add_button($check_for) {
  global $user;
  $user = user_load($user->uid);

  $result = db_query('SELECT f.field_playing_game_target_id FROM field_data_field_playing_game f WHERE f.entity_id = :cuid', array(':cuid' => $user->uid));

  foreach ($result as $record) {
    $gnid = $record -> field_playing_game_target_id;
  }

  $result2 = db_query('SELECT f.entity_id FROM field_data_field_playing_game f WHERE f.field_playing_game_target_id = :gnid', array(':gnid' => $gnid));

  $done = true;
  
  drupal_set_message("about to enter second loop");

  foreach ($result2 as $record2) {
    drupal_set_message($record2->entity_id . " ; ");
    if ($record2 -> entity_id != $user->uid) { // make sure its a student not the facilitator
      $cuser = user_load($record2->entity_id);
      if ($cuser -> field_student_state['und'][0]['tid'] != $check_for) {
        $done = false;
      }
    }
  }

  if ($done) {
    drupal_set_message("hitting done if");
    drupal_add_js(array('gamenid' => array('key' => $gnid)), 'setting');
    drupal_add_js(drupal_get_path('module', 'earn_it_form_tweaks') . '/js/continue-facil.js'); 
  }
  
}

function update_student_progress_php_function($arg1, $arg2) {
  $cuser = user_load($arg1); // arg1 is uid
  $edit = array(
    'field_student_state' => array(
        'und' => array(
          0 => array(
            "tid" => $arg2))), // arg2 is the tid of state
  );
  user_save($cuser, $edit);
  $fakevar = 35;
  return $fakevar;
  //if (isset(user_save($cuser, $edit)->uid))
    //check_all_students_and_add_button($arg2);
}
  
function update_facil_progress_php_function($arg1, $arg2) {
  $cnode = node_load($arg1); // arg1 is nid
  $cnode -> field_current_game_state['und'][0]['tid'] = $arg2; // tid
  node_save($cnode);
}

function create_response_php_function($arg1, $arg2, $arg3) { // activity, user, hours

  // create and save the response node
  $cuser = user_load($arg2);
  $values = array(
    'type' => 'response',
    'uid' => $cuser->uid,
    'status' => 1,
    'comment' => 0,
    'promote' => 0,
  );
  $entity = entity_create('node', $values);
  $ewrapper = entity_metadata_wrapper('node', $entity);
  $ewrapper->title->set($cuser->name . $arg1);

  $ewrapper->field_selected_activity->set(intval($arg1));
  $ewrapper->field_selecting_user->set(intval($arg2));
  $ewrapper->field_selected_hours->set(intval($arg3));
  $ewrapper->save();
  
  // add scholarship money to the user
  

}
